package com.logbookmanager.domain.model.organisation;

import java.util.HashSet;
import java.util.Set;

import org.apache.commons.lang.builder.EqualsBuilder;
import org.apache.commons.lang.builder.HashCodeBuilder;
import org.apache.commons.lang.builder.ToStringBuilder;

import com.logbookmanager.domain.model.Country;
import com.logbookmanager.domain.support.EntitySupport;

/**
 * Organisation generated by hbm2java
 */
public class Organisation extends EntitySupport<Organisation, Long> implements
		java.io.Serializable {
	private static final long serialVersionUID = 912839123L;

	private String name;

	private String commonName;

	private String headOfficeAddress1;

	private String headOfficeAddress2;

	private String headOfficeAddress3;

	private String postCode;

	private String email;

	private Set<Qualification> qualifications = new HashSet<Qualification>();

	private Set<OrganisationCountry> organisationCountries = new HashSet<OrganisationCountry>();


	/** default constructor */
	Organisation() {
	}

	/**
	 * 
	 */
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	/**
	 * 
	 */
	public String getCommonName() {
		return this.commonName;
	}

	public void setCommonName(String commonName) {
		this.commonName = commonName;
	}

	/**
	 * 
	 */
	public String getHeadOfficeAddress1() {
		return this.headOfficeAddress1;
	}

	public void setHeadOfficeAddress1(String headOfficeAddress1) {
		this.headOfficeAddress1 = headOfficeAddress1;
	}

	/**
	 * 
	 */
	public String getHeadOfficeAddress2() {
		return this.headOfficeAddress2;
	}

	public void setHeadOfficeAddress2(String headOfficeAddress2) {
		this.headOfficeAddress2 = headOfficeAddress2;
	}

	/**
	 * 
	 */
	public String getHeadOfficeAddress3() {
		return this.headOfficeAddress3;
	}

	public void setHeadOfficeAddress3(String headOfficeAddress3) {
		this.headOfficeAddress3 = headOfficeAddress3;
	}

	/**
	 * 
	 */
	public String getPostCode() {
		return this.postCode;
	}

	public void setPostCode(String postCode) {
		this.postCode = postCode;
	}

	/**
	 * 
	 */
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	/**
	 * 
	 */
	public Set<Qualification> getQualifications() {
		return this.qualifications;
	}

	public void setQualifications(Set<Qualification> qualifications) {
		this.qualifications = qualifications;
	}

	public void addCountry(Country country) {
		OrganisationCountry organisationCountry = new OrganisationCountry();
		organisationCountry.setCountry(country);
		organisationCountry.setOrganisation(this);
		if (!organisationCountries.contains(organisationCountry)) {
			organisationCountries.add(organisationCountry);
		}
	}

	/**
	 * 
	 */
	public Set<OrganisationCountry> getOrganisationCountries() {
		return this.organisationCountries;
	}

	public void setOrganisationCountries(
			Set<OrganisationCountry> organisationCountries) {
		this.organisationCountries = organisationCountries;
	}

	/**
	 * @see java.lang.Object#equals(Object)
	 */
	public boolean equals(Object object) {
		if (!(object instanceof Organisation)) {
			return false;
		}
		Organisation rhs = (Organisation) object;
		return new EqualsBuilder()
				.append(this.headOfficeAddress2, rhs.headOfficeAddress2)
				.append(this.commonName, rhs.commonName)
				.append(this.headOfficeAddress1, rhs.headOfficeAddress1)
				.append(this.headOfficeAddress3, rhs.headOfficeAddress3)
				.append(this.email, rhs.email)
				.append(this.postCode, rhs.postCode)
				.append(this.name, rhs.name).append(this.id, rhs.id)
				.append(this.version, rhs.version).isEquals();
	}

	/**
	 * @see java.lang.Object#hashCode()
	 */
	public int hashCode() {
		return new HashCodeBuilder(1137867691, 280120237)
				.append(this.headOfficeAddress2).append(this.commonName)
				.append(this.headOfficeAddress1)
				.append(this.headOfficeAddress3).append(this.email)
				.append(this.postCode).append(this.name).append(this.id)
				.append(this.version).toHashCode();
	}

	/**
	 * @see java.lang.Object#toString()
	 */
	public String toString() {
		return new ToStringBuilder(this).append("name", this.name)
				.append("id", this.id).append("version", this.version)
				.append("headOfficeAddress1", this.headOfficeAddress1)
				.append("commonName", this.commonName)
				.append("email", this.email).append("postCode", this.postCode)
				.append("headOfficeAddress3", this.headOfficeAddress3)
				.append("headOfficeAddress2", this.headOfficeAddress2)
				.toString();
	}

}